<?xml version="1.0" encoding="utf-8"?> 
<feed xmlns="http://www.w3.org/2005/Atom" xml:lang="en">
 <title type="text">Ethan Estrada: Posts tagged 'Lisp'</title>
 <link rel="self" href="http://www.misterfidget.com/feeds/Lisp.atom.xml" />
 <link href="http://www.misterfidget.com/tags/Lisp.html" />
 <id>urn:http-www-misterfidget-com:-tags-Lisp-html</id>
 <updated>2016-09-11T05:11:20Z</updated>
 <entry>
  <title type="text">On Syntax and Macros</title>
  <link rel="alternate" href="http://www.misterfidget.com/blog/2016/09/10/on-syntax-and-macros.html?utm_source=Lisp&amp;utm_medium=Atom" />
  <id>urn:http-www-misterfidget-com:-blog-2016-09-10-on-syntax-and-macros-html</id>
  <published>2016-09-11T05:11:20Z</published>
  <updated>2016-09-11T05:11:20Z</updated>
  <author>
   <name>Ethan D. Estrada</name></author>
  <content type="html">&lt;html&gt;
&lt;p&gt;From what I have read, it seems that most people have an ultimate Zen moment with Lisp that makes the universe seem to fall into order (or, &lt;a href="http://www.catb.org/~esr/faqs/hacker-howto.html#skills1"&gt;so says Eric S. Raymond&lt;/a&gt;). My journey with Lisp so far hasn&amp;rsquo;t been like that. Instead, it has been a number of smaller &amp;ldquo;Aha!&amp;rdquo; moments. In fact, I just had one today. Maybe my big Zen moment will come later. I guess I&amp;rsquo;ll just need to keep learning and see where the Lisp journey takes me.&lt;/p&gt;
&lt;!-- more--&gt;

&lt;p&gt;Getting back to the &amp;ldquo;Aha!&amp;rdquo; moment, I was reading &lt;a href="http://all-things-andy-gavin.com/2011/03/12/making-crash-bandicoot-gool-part-9/"&gt;an article by Andrew Gavin about how he used Lisp in creating games for Naughty Dog&lt;/a&gt;. In the article he says that "&amp;hellip;C provides series of convenient macros for flow control, arithmetic operations, memory reference, function calling, and structure access." My first reaction was &amp;ldquo;No, Andy. You&amp;rsquo;ve got it all wrong. Those aren&amp;rsquo;t macros, they are part of the syntax&amp;hellip;&amp;rdquo;&lt;/p&gt;

&lt;blockquote&gt;
 &lt;p&gt;Syntax, in any language, is just a bunch of macros you didn&amp;rsquo;t need to write.&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;Then I paused, thought for a minute, and made a realization: if macros are syntax, is the inverse also true? Is syntax just macros? Yes, yes it is. Syntax, in any language, is just a bunch of macros you didn&amp;rsquo;t need to write. Why? Because all languages are later compiled to something else.&lt;/p&gt;

&lt;p&gt;Compilation is a fancy way of saying you transform one language into another, much like macros transform one piece of syntax into another piece of syntax. Not &lt;em&gt;much&lt;/em&gt; like; it&amp;rsquo;s &lt;strong&gt;&lt;em&gt;exactly&lt;/em&gt;&lt;/strong&gt; like that. Transforming Lisp to Lisp is not all that different from transforming C to assembly, or Python to bytecode. That is what Andrew ultimately does with his custom Lisp dialect, GOOL: compile Lisp into R3000 assembly code.&lt;/p&gt;

&lt;p&gt;So, thanks Andy. Your twenty year old article taught me something fundemental about Lisp and computer science. And the Lisp journey continues.&lt;/p&gt;&lt;/html&gt;</content></entry></feed>