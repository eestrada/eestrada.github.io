<?xml version="1.0" encoding="utf-8"?> 
<rss version="2.0">
 <channel>
  <title>Ethan Estrada: Ethan Estrada</title>
  <description>Ethan Estrada: Ethan Estrada</description>
  <link>http://www.misterfidget.com/blog/index.html</link>
  <lastBuildDate>Mon, 27 Feb 2017 23:43:40 UT</lastBuildDate>
  <pubDate>Mon, 27 Feb 2017 23:43:40 UT</pubDate>
  <ttl>1800</ttl>
  <item>
   <title>Hierarchy of Needs</title>
   <link>http://www.misterfidget.com/blog/2017/02/27/hierarchy-of-needs.html?utm_source=all&amp;utm_medium=RSS</link>
   <guid>urn:http-www-misterfidget-com:-blog-2017-02-27-hierarchy-of-needs-html</guid>
   <pubDate>Mon, 27 Feb 2017 23:43:40 UT</pubDate>
   <description>&lt;html&gt;
&lt;p&gt;If you couldn&amp;rsquo;t tell, the title of this post is a nod to &lt;a href="https://en.wikipedia.org/wiki/Maslow%27s_hierarchy_of_needs"&gt;&amp;ldquo;Mazlow&amp;rsquo;s hierarchy of needs&amp;rdquo;&lt;/a&gt;, a psychological theory about how we prioritize things as humans. This post isn&amp;rsquo;t about that theory whatsoever.&lt;/p&gt;
&lt;!-- more--&gt;

&lt;p&gt;This particular hierarchy of needs has to do with prioritizing tasks to accomplish a goal. I am not the master goal setter in the world. I don&amp;rsquo;t claim to be some sort of planning guru. Far from it. But I have had a thought about a simple way to deal with task lists. It has all been inspired by conversation with my friend and colleague &lt;a href="http://metapipe.com/team/"&gt;AJ&lt;/a&gt; and &lt;a href="http://blog.trello.com/why-your-to-do-list-is-going-nowhere"&gt;an article I read on Trello&amp;rsquo;s blog&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;In short, the article&amp;rsquo;s (and &lt;a href="http://metapipe.com/team/"&gt;AJ&amp;rsquo;s&lt;/a&gt;) point is that often our task lists aren&amp;rsquo;t correlated to projects; there are a bunch of things to get done, but they don&amp;rsquo;t always drive us toward completing our projects. The idea is you should prioritize those things that actually drive you closer to project completion. So, the problem isn&amp;rsquo;t your task list; it is the fact that the tasks are just tasks, not attached to anything. I love the idea; it&amp;rsquo;s something I think most of us know, but forget far too easily. I sure know I do. Thanks for getting me started down the path &lt;a href="http://metapipe.com/team/"&gt;AJ&lt;/a&gt;!&lt;/p&gt;

&lt;p&gt;Once I finished the article, I thought, &amp;ldquo;But how does one actually do that? A lot of those tasks that don&amp;rsquo;t push us towards our ultimate goals and project completions are still critical things that &lt;em&gt;need&lt;/em&gt; to get done.&amp;rdquo; As I thought about it, I came up with a simple list to help remind my self what my options are in such circumstances. In essence, with any any task that doesn&amp;rsquo;t drive you towards a goal, you ask yourself if you can do one of the things listed below, in the order listed. Do this with each task. In fact, it wouldn&amp;rsquo;t be a bad idea to do this with all your tasks, both project/goal aligned and otherwise.&lt;/p&gt;

&lt;p&gt;In order of preferability, here are the options you should try to apply to each task (with further explanation below): &lt;strong&gt;Eliminate&lt;/strong&gt;, &lt;strong&gt;Automate&lt;/strong&gt;, &lt;strong&gt;Delegate&lt;/strong&gt;, &lt;strong&gt;Degenerate&lt;/strong&gt;, &lt;strong&gt;Procrastinate&lt;/strong&gt;.&lt;/p&gt;

&lt;ol&gt;
 &lt;li&gt;&lt;strong&gt;Eliminate&lt;/strong&gt;
  &lt;ul&gt;
   &lt;li&gt;Can a task be outright eliminated? Can you quit a job or quit your volunteer position in an organization that isn&amp;rsquo;t driving you towards your goal/project completion? Do you really need to add that one extra cool feature to your app/library/product/animation/film/game, or can you do without it and ship it on time or earlier? Sometimes elimination just isn&amp;rsquo;t possible, but it should be our first go to; the easiest tasks to complete are the ones you don&amp;rsquo;t need to complete in the first place.&lt;/li&gt;&lt;/ul&gt;&lt;/li&gt;
 &lt;li&gt;&lt;strong&gt;Automate&lt;/strong&gt;
  &lt;ul&gt;
   &lt;li&gt;Is there a phone app, a program, a service, an AI assitant, or a script you could use to get the task done for you without your intervention or with minimal intervention on your part? If you are a software developer, would it take less time to code up a solution than it would be to do it repeatedly by hand? Some tasks are one offs, so scripting your own solution might not make sense, but perhaps someone else has already done the work to automate it. Even if this costs money it is often worth it. The simple formula is to compare your hourly wage to the cost of the product. For example, if you are paid the Federal Minimum wage, any automated service that can save you at least one hour of tedious work is worth $7.25 USD (the &lt;a href="https://www.dol.gov/whd/state/stateMinWageHis.htm"&gt;US Federal Minumum Wage as of last year, 2016&lt;/a&gt;). Then you could spend your hour doing something more worthwhile; like learning a new skill that will earn you more than minimum wage. ¯\_(ツ)_/¯&lt;/li&gt;&lt;/ul&gt;&lt;/li&gt;
 &lt;li&gt;&lt;strong&gt;Delegate&lt;/strong&gt;
  &lt;ul&gt;
   &lt;li&gt;Is there someone who works for you or with you who has the bandwidth and aptitude to accomplish the task? Will it take more time to train the person than it would be to just do it yourself? If it is a repeating task, perhaps the time lost training someone else upfront can be made up in the long run (just as with automation via scripting).&lt;/li&gt;&lt;/ul&gt;&lt;/li&gt;
 &lt;li&gt;&lt;strong&gt;Degenerate&lt;/strong&gt;
  &lt;ul&gt;
   &lt;li&gt;Can you sacrifice on quality? Often, 80% of the effort goes into the last 20% of quality of a pursuit. Does the task really need to be treated as top tier, or is it Ok to just phone it in with 20% of the effort for 80% of the quality and save yourself a lot of time? Confession time: I am a perfectionist. I don&amp;rsquo;t mention this as some sort of humble-brag, but with true chagrine. I either do something with the best that I have got, or I don&amp;rsquo;t do it at all. It is very binary and very unhealthy. It means a lot of stuff that should end up happening simply doesn&amp;rsquo;t. I think a lot of other people are the same too. Be ok with putting in less than your best to get something less important off of your list quickly. As for me putting this into action, I am not proof-reading this a million times or sitting on it for multiple days like I usually do. So, please excuse errors. Or don&amp;rsquo;t. It doesn&amp;rsquo;t matter because I am posting it whether you excuse the errors or not. I&amp;rsquo;m trying to be ok with not giving 100% on this one, because it doesn&amp;rsquo;t further my most important goals and associated projects.&lt;/li&gt;&lt;/ul&gt;&lt;/li&gt;
 &lt;li&gt;&lt;strong&gt;Procrastinate&lt;/strong&gt;
  &lt;ul&gt;
   &lt;li&gt;If worst comes to worst and you truly do need to give your level best, can this task simply be put off for a while? I know, I know; your mother and/or father told you to never procrastinate, but the reality is that we do it all the time anyway without thinking about it. The difference here is that you are doing it conciously and purposefully. Really, another term for procrastination is prioritization, but it just sounds far worse. Which is why I chose it: so that both you and I will remember to actually do it! Also, Prioritize doesn&amp;rsquo;t rhyme with the other options like Procrastinate does ;). To make it a less dirty word, let&amp;rsquo;s call it Planned Procrastination. At some point your workload is going to lighten some and there will be time to do that one nagging thing. Of course, all procrastinated things must eventually be done, which is why this is the last possible option available and easily the least desirable.&lt;/li&gt;&lt;/ul&gt;&lt;/li&gt;&lt;/ol&gt;

&lt;p&gt;I have yet to think of any other possibilities. Thoughts and suggestions are welcome on this one. More options are always better. I wrote this post for myself more than anyone. I need reminders like this, and I like simple steps and systems I can follow. Life isn&amp;rsquo;t always so clean cut and tidy, so they end up just being guidelines, not hard and fast rules. But even loose guidelines are better than nothing. And with that I say, Carpe Diem!&lt;/p&gt;&lt;/html&gt;</description></item>
  <item>
   <title>On Syntax and Macros</title>
   <link>http://www.misterfidget.com/blog/2016/09/10/on-syntax-and-macros.html?utm_source=all&amp;utm_medium=RSS</link>
   <guid>urn:http-www-misterfidget-com:-blog-2016-09-10-on-syntax-and-macros-html</guid>
   <pubDate>Sun, 11 Sep 2016 05:11:20 UT</pubDate>
   <description>&lt;html&gt;
&lt;p&gt;From what I have read, it seems that most people have an ultimate Zen moment with Lisp that makes the universe seem to fall into order (or, &lt;a href="http://www.catb.org/~esr/faqs/hacker-howto.html#skills1"&gt;so says Eric S. Raymond&lt;/a&gt;). My journey with Lisp so far hasn&amp;rsquo;t been like that. Instead, it has been a number of smaller &amp;ldquo;Aha!&amp;rdquo; moments. In fact, I just had one today. Maybe my big Zen moment will come later. I guess I&amp;rsquo;ll just need to keep learning and see where the Lisp journey takes me.&lt;/p&gt;
&lt;!-- more--&gt;

&lt;p&gt;Getting back to the &amp;ldquo;Aha!&amp;rdquo; moment, I was reading &lt;a href="http://all-things-andy-gavin.com/2011/03/12/making-crash-bandicoot-gool-part-9/"&gt;an article by Andrew Gavin about how he used Lisp in creating games for Naughty Dog&lt;/a&gt;. In the article he says that "&amp;hellip;C provides series of convenient macros for flow control, arithmetic operations, memory reference, function calling, and structure access." My first reaction was &amp;ldquo;No, Andy. You&amp;rsquo;ve got it all wrong. Those aren&amp;rsquo;t macros, they are part of the syntax&amp;hellip;&amp;rdquo;&lt;/p&gt;

&lt;blockquote&gt;
 &lt;p&gt;Syntax, in any language, is just a bunch of macros you didn&amp;rsquo;t need to write.&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;Then I paused, thought for a minute, and made a realization: if macros are syntax, is the inverse also true? Is syntax just macros? Yes, yes it is. Syntax, in any language, is just a bunch of macros you didn&amp;rsquo;t need to write. Why? Because all languages are later compiled to something else.&lt;/p&gt;

&lt;p&gt;Compilation is a fancy way of saying you transform one language into another, much like macros transform one piece of syntax into another piece of syntax. Not &lt;em&gt;much&lt;/em&gt; like; it&amp;rsquo;s &lt;strong&gt;&lt;em&gt;exactly&lt;/em&gt;&lt;/strong&gt; like that. Transforming Lisp to Lisp is not all that different from transforming C to assembly, or Python to bytecode. That is what Andrew ultimately does with his custom Lisp dialect, GOOL: compile Lisp into R3000 assembly code.&lt;/p&gt;

&lt;p&gt;So, thanks Andy. Your twenty year old article taught me something fundemental about Lisp and computer science. And the Lisp journey continues.&lt;/p&gt;&lt;/html&gt;</description></item>
  <item>
   <title>SIGGRAPH 2016 Post Mortem</title>
   <link>http://www.misterfidget.com/blog/2016/07/29/siggraph-2016-post-mortem.html?utm_source=all&amp;utm_medium=RSS</link>
   <guid>urn:http-www-misterfidget-com:-blog-2016-07-29-siggraph-2016-post-mortem-html</guid>
   <pubDate>Fri, 29 Jul 2016 20:52:18 UT</pubDate>
   <description>&lt;html&gt;
&lt;p&gt;I had the opportunity to attend SIGGRAPH this year as a representative of &lt;a href="http://metapipe.com"&gt;MetaPipe&lt;/a&gt;. For as fun as it was to meet with representatives of various software and cloud companies, I am happy to be able to get my nose back to the grindstone on MetaPipe. I&amp;rsquo;m extremely excited about the tech we are working on for the service and I can&amp;rsquo;t wait to get it to the point where we can start demoing it publicly to get everyone&amp;rsquo;s feedback. We started a lot of converstaions at SIGGRAPH with various companies that we feel fairly confident will turn into more concrete agreements in the near future.&lt;/p&gt;
&lt;!-- more--&gt;

&lt;p&gt;I got an &amp;ldquo;Exhibits Only&amp;rdquo; pass during the convention; we are trying to be as scrappy, lean, and frugal as we can be so splurging on something like a &amp;ldquo;Full Conference&amp;rdquo; pass would definitly be overkill especially when Avere provided us with a code for a free &amp;ldquo;Exhibits Only&amp;rdquo; pass. Besides, all of the people we wanted to talk to were on the exhibit floor anyway. Maybe in future years we will get more complete passes to check out presentations to see the state of the industry, but for now we are keeping it simple. Ideally we will be able to justify having our own booth next year!&lt;/p&gt;

&lt;p&gt;Even though I&amp;rsquo;ve heard SIGGRAPH has shrunk in attendence some in recent years, it is still very impressive in size and scope. I think this in part is from the decreased focus on the job fair and a greater focus on interconnect between vendors. SIGGRAPH seems less useful for individual artists looking for work than it used to be.&lt;/p&gt;

&lt;p&gt;The biggest focus at the convention seemed to be VR and AR. Pretty much every booth from software vendors featured VR workflows. The new VR camera from Houdini, CaraVR addon for Nuke from The Foundry, the (not yet publicly available) VR toolset for Mocha from Imagineer systems, and more from other companies as well.&lt;/p&gt;

&lt;p&gt;Not surprisingly, cloud was also a big focus (which was a big attraction to us). Many softwares packages such as deadline from Thinkbox software and Tractor from Pixar are starting to have more and more cloud based features, such as extremely granular billing for various software packages (from Thinkbox) and intelligent autoscaling features (from Tractor, and if I remember correctly, Thinkbox was working on similar stuff as well).&lt;/p&gt;

&lt;p&gt;Autoscaling is an interesting problem in and of itself; scale too quickly and users will rack up charges for compute they didn&amp;rsquo;t really use efficiently. Scale too slowly and what should only take a few minutes could end up taking hours. Some workloads are heavy per frame and some are light. When do you scale up? How automagical can you make it for the user so that they have fewer knobs to deal with? Can you base it off of the basic priority parameter that most render schedulers already have, or do you need a different mechanism for it? Perhaps something like the expected average render time per frame (or task)? What about distributed simulations that are parallel, but need to be in lockstep? They should probably all spin up at the same time, but how do you signal this to the scheduler in a relatively turnkey way?&lt;/p&gt;

&lt;p&gt;During the convention, I either asked these questions to the various developers on the farm manager teams, or thought of them after the fact due to mulling over the questions I had asked or information I had learned. It isn&amp;rsquo;t an easy problem to solve and one that I am sure will have many more years of time and effort poured into it before well rounded solutions come to market.&lt;/p&gt;&lt;/html&gt;</description></item>
  <item>
   <title>Moving blogs</title>
   <link>http://www.misterfidget.com/blog/2016/07/29/moving-blogs.html?utm_source=all&amp;utm_medium=RSS</link>
   <guid>urn:http-www-misterfidget-com:-blog-2016-07-29-moving-blogs-html</guid>
   <pubDate>Fri, 29 Jul 2016 15:52:18 UT</pubDate>
   <description>&lt;html&gt;
&lt;p&gt;I am moving blogging platforms and thought I should maybe explain why.&lt;/p&gt;
&lt;!-- more--&gt;

&lt;p&gt;In the past I have been hosting my blog on Google&amp;rsquo;s Blogger platform. This has served me pretty well over the years along with the limited number of posts I have made. However, as I have tried to expand the blog into more of a general website, it has been an uphill battle fighting against the workflow of the blogging system itself. I don&amp;rsquo;t forsee wordpress being much different.&lt;/p&gt;

&lt;p&gt;Besides, one of my reasons for moving to my current setup was simplicity and control. I am using a static site generator now (ala Jekyll). The reasons for this being that:&lt;/p&gt;

&lt;ol&gt;
 &lt;li&gt;I now directly control my own content&lt;/li&gt;
 &lt;li&gt;I don&amp;rsquo;t need to set up a wordpress server or anything of the sort&lt;/li&gt;
 &lt;li&gt;There should never be downtime since the site is statically hosted  on Github or S3 or whereever&lt;/li&gt;
 &lt;li&gt;Inline with number 1, I can version control my content (with  something simple like git)&lt;/li&gt;
 &lt;li&gt;I can write my posts in MarkDown&lt;/li&gt;
 &lt;li&gt;I can embed source code styling instead of reaching out to  JavaScript libraries to do it dynamically at run time&lt;/li&gt;&lt;/ol&gt;

&lt;p&gt;I like all these reasons. It also means I can theme the site however I like using simple HTML templates. I can also add whatever types of pages I want since in the end it is just static HTML.&lt;/p&gt;

&lt;p&gt;Really, there are lots of reasons to use a static site generator. I am currently using &lt;a href="https://github.com/greghendershott/frog"&gt;frog&lt;/a&gt;, the &lt;strong&gt;fr&lt;/strong&gt;ozen bl&lt;strong&gt;og&lt;/strong&gt; generator, written in a somewhat lesser known language called Racket (a dialect of Lisp descended from Scheme). I like the Lisp in general and Racket in specific. I want to support its increased usage and the best way to do that is to use projects that use it.&lt;/p&gt;

&lt;p&gt;I plan to port over my old blog posts once I get a chance, although that may prove to be a bit of a chore. I&amp;rsquo;ll probably end up avoiding it for a super long time.&lt;/p&gt;&lt;/html&gt;</description></item></channel></rss>